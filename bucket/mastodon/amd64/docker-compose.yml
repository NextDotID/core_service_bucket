version: '3'
services:
  postgresql:
    image: docker.io/bitnami/postgresql:15
    networks:
      - internal
    volumes:
      - 'postgresql_data:/bitnami/postgresql'
    environment:
      - POSTGRESQL_DATABASE=bitnami_mastodon
      - POSTGRESQL_USERNAME=bn_mastodon
      - POSTGRESQL_PASSWORD=bitnami1
  redis:
    image: docker.io/bitnami/redis:7.0
    volumes:
      - 'redis_data:/bitnami/redis'
    networks:
      - internal
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
  mastodon:
    image: docker.io/bitnami/mastodon:4.1.1
    networks:
      - core_service
      - internal
    volumes:
      - 'mastodon_data:/bitnami/mastodon'
    environment:
      - ES_ENABLED=false
      - ALLOW_EMPTY_PASSWORD=yes
      - MASTODON_MODE=web
      - MASTODON_DATABASE_PASSWORD=bitnami1
    labels:
      - "traefik.http.routers.{{INTERNAL:SERVICE}}-router.rule=Host(`{{INTERNAL:SERVICE}}.{{INTERNAL:HOST_DOMAIN}}`)"
      - "traefik.http.routers.{{INTERNAL:SERVICE}}-router.entrypoints=websecure"
      - "traefik.http.routers.{{INTERNAL:SERVICE}}-router.service={{INTERNAL:SERVICE}}-service"
      - "traefik.http.routers.{{INTERNAL:SERVICE}}-router.tls.certresolver=leresolver"
      - "traefik.http.services.{{INTERNAL:SERVICE}}-service.loadbalancer.server.port=3000"
  mastodon-streaming:
    image: docker.io/bitnami/mastodon:4.1.1
    networks:
      - core_service
      - internal
    environment:
      - ES_ENABLED=false
      - ALLOW_EMPTY_PASSWORD=yes
      - MASTODON_MODE=streaming
      - MASTODON_DATABASE_PASSWORD=bitnami1
    labels:
      - "traefik.http.routers.{{INTERNAL:SERVICE}}-streaming-router.rule=Host(`{{INTERNAL:SERVICE}}.{{INTERNAL:HOST_DOMAIN}}`) && PathPrefix(`/api/v1/streaming`)"
      - "traefik.http.routers.{{INTERNAL:SERVICE}}-streaming-router.entrypoints=websecure"
      - "traefik.http.routers.{{INTERNAL:SERVICE}}-streaming-router.service={{INTERNAL:SERVICE}}-streaming-service"
      - "traefik.http.routers.{{INTERNAL:SERVICE}}-streaming-router.tls.certresolver=leresolver"
      - "traefik.http.services.{{INTERNAL:SERVICE}}-streaming-service.loadbalancer.server.port=4000"
  mastodon-sidekiq:
    image: docker.io/bitnami/mastodon:4.1.1
    volumes:
      - 'mastodon_data:/bitnami/mastodon'
    environment:
      - ES_ENABLED=false
      - ALLOW_EMPTY_PASSWORD=yes
      - MASTODON_MODE=sidekiq
      - MASTODON_DATABASE_PASSWORD=bitnami1
volumes:
  postgresql_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local
  mastodon_data:
    driver: local

networks:
  core_service:
    external: true
  internal: